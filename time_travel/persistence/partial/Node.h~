#include <iostream>
#include <string>

using namespace std;

template<class T>
class Node {
	public:
		T data;
		int version;
		Node<T>* next;
		Node<T>* backpointer;	// p
		T* modsData;
		Node<T> *modPointer;	// 2p
		
		Node<T>(const T& d, int ver) : data(d), next(), version(ver) {}

		bool addMod(T value);
		T getDataAtVersion(int version);
};

template<class T>
bool Node<T>::addModValue(T* value) {
	if (modsData == NULL) {
		modsData = value;
		return true;
	} 
	return false;
}

template<class T>
bool Node<T>::addModPointer(Node<T>* pointer) {
	if (modPointer == NULL) {
		modsPointer = pointer;
		return true;
	} 
	return false;
}

template<class T>
T Node<T>::getDataAtVersion(int version) {
	return data;
}


